@import 'common.less';

.theme-oo-ui-widget() {
}

.theme-oo-ui-actionWidget() {
}

.theme-oo-ui-buttonWidget() {
	.oo-ui-inline-spacing(@margin-end-widget);
}

.theme-oo-ui-buttonGroupWidget() {
	border-radius: @border-radius-base;
	display: inline-block;
	padding-bottom: @border-width-base;
	position: relative;
	// Create a stacking context, so that we can use `z-index` below without leaking out
	z-index: 0;
	.oo-ui-inline-spacing(@margin-end-widget);

	// Overrides both, ButtonWidget & ToggleButtonWidget
	.oo-ui-buttonElement {
		margin-right: 0;
		z-index: 0;
	}

	.oo-ui-buttonElement-framed {
		.oo-ui-buttonElement-button {
			border-radius: 0;
			margin-bottom: -@border-width-base;
			margin-right: -@border-width-base;
		}

		&:first-child .oo-ui-buttonElement-button {
			border-bottom-left-radius: @border-radius-base;
			border-top-left-radius: @border-radius-base;
		}

		&:last-child .oo-ui-buttonElement-button {
			border-bottom-right-radius: @border-radius-base;
			border-top-right-radius: @border-radius-base;
			margin-right: 0;
		}

		&.oo-ui-widget-disabled + .oo-ui-widget-disabled {
			> .oo-ui-buttonElement-button {
				border-left-color: @border-color-filled--disabled;
			}
		}
	}

	// Give hovered/focussed/active buttons higher `z-index`, so that borders display correctly.
	// Identical to .theme-oo-ui-buttonSelectWidget, except for the `:focus` selector.
	&.oo-ui-widget-enabled {
		.oo-ui-buttonElement {
			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:active {
				z-index: 1;
			}

			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:focus {
				z-index: 2;
			}

			&.oo-ui-buttonElement-active > .oo-ui-buttonElement-button {
				z-index: 3;
			}

			&.oo-ui-widget-disabled > .oo-ui-buttonElement-button {
				z-index: -1;
			}

			&.oo-ui-toggleWidget-on + .oo-ui-toggleWidget-on {
				> .oo-ui-buttonElement-button,
				> .oo-ui-buttonElement-button:active {
					border-left-color: @border-color-base;
					z-index: 3;
				}
			}
		}
	}
}

.theme-oo-ui-buttonInputWidget() {
}

.theme-oo-ui-buttonOptionWidget() {
}

.theme-oo-ui-buttonSelectWidget() {
	border-radius: @border-radius-base;
	padding-bottom: @border-width-base;
	position: relative;
	// Create a stacking context, so that we can use `z-index` below without leaking out
	z-index: 0;
	.oo-ui-inline-spacing(@margin-end-widget);

	&:focus {
		outline: 0;
	}

	.oo-ui-buttonOptionWidget {
		.oo-ui-buttonElement-button {
			border-radius: 0;
			margin-bottom: -@border-width-base;
			margin-right: -@border-width-base;
		}

		&:first-child .oo-ui-buttonElement-button {
			border-bottom-left-radius: @border-radius-base;
			border-top-left-radius: @border-radius-base;
		}

		&:last-child .oo-ui-buttonElement-button {
			border-bottom-right-radius: @border-radius-base;
			border-top-right-radius: @border-radius-base;
			margin-right: 0;
		}

		&.oo-ui-widget-disabled + .oo-ui-widget-disabled {
			> .oo-ui-buttonElement-button {
				border-left-color: @border-color-filled--disabled;
			}
		}
	}

	&.oo-ui-widget-enabled {
		&:focus {
			.oo-ui-buttonOptionWidget.oo-ui-optionWidget-selected {
				.oo-ui-buttonElement-button {
					border-color: @border-color-base--focus;
					box-shadow: @box-shadow-progressive--focus;
				}
			}
		}

		// Give hovered/focussed/active buttons higher `z-index`, so that borders display correctly.
		// Identical to .theme-oo-ui-buttonGroupWidget, except we don't need `:focus` selector.
		.oo-ui-buttonElement {
			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:hover,
			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:active {
				z-index: 1;
			}

			&.oo-ui-buttonElement-active > .oo-ui-buttonElement-button {
				z-index: 3;
			}

			&.oo-ui-widget-disabled > .oo-ui-buttonElement-button {
				z-index: -1;
			}
		}
	}
}

.theme-oo-ui-checkboxInputWidget() {
	color: @wds-fandom-color-link;
	line-height: @wds-line-height-none;
	position: relative;
	vertical-align: middle;
	white-space: nowrap;
	z-index: 0;

	[type='checkbox'] {
		height: @size-input-binary;
		margin: 0;
		max-width: none;
		opacity: 0;
		position: relative;
		width: @size-input-binary;
		z-index: 1;

		+ span {
			align-items: center;
			background-color: @wds-color-white;
			border: 2px solid @wds-color-light-gray;
			box-sizing: border-box;
			color: inherit;
			display: grid;
			height: @size-input-binary;
			justify-items: center;
			left: 0;
			-webkit-mask: none;
			mask: none;
			min-height: @size-input-binary;
			min-width: @size-input-binary;
			position: absolute;
			top: 0;
			width: @size-input-binary;

			&::before {
				border-color: transparent;
				border-style: solid;
				border-width: 0 0 2px 2px;
				content: '';
				display: block;
				height: 3px;
				margin-top: -2px;
				transform: rotate(-45deg);
				width: 6px;
			}
		}

		&:indeterminate + span::before {
			border-color: @wds-color-light-gray;
			border-width: 2px 0 0 0;
			margin-top: 2px;
			transform: rotate(0deg);
			width: 8px;
		}

		&:disabled,
		&:checked:disabled {
			+ span {
				border-color: @wds-color-light-gray;
				opacity: 0.5;
				pointer-events: none;
			}
		}

		&:checked:disabled + span::before {
			border-color: @wds-color-light-gray;
		}
	}

	&.oo-ui-widget-enabled [type='checkbox'] {
		cursor: pointer;

		+ span {
			cursor: pointer;
			.oo-ui-transition(background-color @transition-base, border-color @transition-base);
		}

		&:focus + span,
		&:hover + span {
			border-color: currentColor;
		}

		&:active + span {
			background-color: currentColor;
			border-color: currentColor;
		}

		&:checked,
		&:indeterminate {
			& + span,
			&:focus + span,
			&:active + span {
				border-color: currentColor;

				&::before {
					border-color: currentColor;
				}
			}
		}
	}
}

.theme-oo-ui-checkboxMultioptionWidget() {
	padding: @padding-vertical-label 0;

	&:first-child {
		margin-top: -@padding-vertical-label;
	}

	&.oo-ui-labelElement > .oo-ui-labelElement-label {
		padding-left: @padding-start-fieldlayout-label;
	}

	.oo-ui-checkboxInputWidget {
		margin-right: 0;
	}
}

.theme-oo-ui-checkboxMultiselectWidget() {
}

.theme-oo-ui-checkboxMultiselectInputWidget() {
	.oo-ui-fieldLayout {
		// Override `.oo-ui-fieldLayout.oo-ui-labelElement`.
		margin-top: 0;
		// Equal to CheckboxMultiOptionWidget and to prevent collapsing `margin`s.
		padding: @padding-vertical-label 0;

		&:first-child {
			// `@padding-vertical-label` used as negative `margin-top` here.
			margin-top: -@padding-vertical-label;
		}
	}
}

.theme-oo-ui-comboBoxInputWidget() {
	// Inherits from `inputWidget` & `textInputWidget`.
	.oo-ui-inputWidget-input {
		border-bottom-right-radius: 0;
		border-right-width: 0;
		border-top-right-radius: 0;
		height: @size-base;
	}

	// Undo setting properties above when there is no button:
	// if the menu is empty, or if this is the PHP version
	&.oo-ui-comboBoxInputWidget-empty .oo-ui-inputWidget-input,
	&-php .oo-ui-inputWidget-input {
		border-bottom-right-radius: @border-radius-base;
		border-right-width: @border-width-base;
		border-top-right-radius: @border-radius-base;
	}

	&-dropdownButton.oo-ui-indicatorElement {
		width: @width-button-combo-widget;

		.oo-ui-buttonElement-button {
			min-width: @min-width-button-combo-widget;
			padding-left: 0;

			> .oo-ui-indicatorElement-indicator {
				right: @start-framed-indicator-only-button-combo-widget;
			}
		}

		.oo-ui-buttonElement-button,
		.oo-ui-buttonElement-button:focus {
			border-bottom-left-radius: 0;
			border-top-left-radius: 0;
		}
	}

	&-php .oo-ui-indicatorWidget {
		margin: 0;
		right: @padding-horizontal-base;
	}

	&-open &-dropdownButton {
		> .oo-ui-buttonElement-button {
			background-color: @background-color-framed--hover;

			.oo-ui-indicatorElement-indicator {
				opacity: @opacity-icon-base--selected;
			}
		}
	}

	&.oo-ui-widget-disabled {
		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-filled--disabled;
		}
	}
}

.theme-oo-ui-decoratedOptionWidget() {
	line-height: @line-height-reset;
	padding: @padding-menu;

	&.oo-ui-widget-enabled {
		&:hover {
			.oo-ui-iconElement-icon,
			.oo-ui-indicatorElement-indicator {
				opacity: @opacity-icon-base--hover;
			}
		}

		.oo-ui-iconElement-icon,
		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-icon-base;
			.oo-ui-transition(opacity @transition-base);
		}
	}

	&.oo-ui-widget-disabled {
		.oo-ui-iconElement-icon,
		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-base--disabled;
		}
	}
}

.theme-oo-ui-dropdownWidget() {
	max-width: @max-width-input;
	width: 100%;

	&-handle {
		background-color: @wds-color-white;
		border: 1px solid @wds-fandom-color-mid-light-gray;
		border-radius: @wds-rounded-corner-radius;
		line-height: @wds-line-height-normal;
		min-height: @min-height-widget-base;
		padding: @wds-button-vertical-padding @input-horizontal-padding;
		color: inherit;
		font-family: inherit;
		font-size: @wds-font-size-s;

		.oo-ui-iconElement-icon {
			height: auto;
			left: @input-horizontal-padding;
			top: 7px;
			position: absolute;
		}

		.oo-ui-indicatorElement-indicator {
			height: auto;
			position: absolute;
			right: @input-horizontal-padding - 1px;
			top: 10px;
		}

		.oo-ui-labelElement-label {
			line-height: @line-height-base;
		}
	}

	&.oo-ui-iconElement &-handle {
		padding-left: @input-horizontal-padding + @wds-icon-small-size + @wds-button-horizontal-gap;
	}

	&.oo-ui-indicatorElement &-handle {
		padding-right: @min-size-indicator + 2 * @padding-horizontal-input-text;
	}

	&.oo-ui-widget-enabled &-handle {
		box-shadow: @box-shadow-widget;
		.oo-ui-transition(border-color @transition-base, box-shadow @transition-base);

		&:hover, &:focus, &:active {
			border-color: @wds-fandom-color-link;
		}

		&:active {
			box-shadow: inset 0 0 0 1px @wds-fandom-color-link;
		}
	}

	&.oo-ui-widget-enabled&-open &-handle {
	}

	&.oo-ui-widget-disabled &-handle {
		opacity: 0.5;
		pointer-events: none;
	}
}

.theme-oo-ui-dropdownInputWidget() {
	max-width: @max-width-input;
	width: 100%;

	select {
		// Remove user agent styles.
		-webkit-appearance: none;
		-moz-appearance: none;
		// Support Firefox <= 34: Anything apart from `transparent` mixes up `option` sizes.
		background-color: transparent;
		background-position: right @padding-horizontal-base center;
		// stylelint-disable declaration-block-no-duplicate-properties, media-feature-parentheses-space-inside
		// Support IE 8-9: Move custom arrow out of canvas and remove padding the custom arrow.
		// Also affects IE 10. An absolute horror show.
		background-position: ~'-9999em 0\9';
		border: @border-base;
		border-radius: @border-radius-base;
		box-sizing: border-box;
		font-family: inherit;
		font-size: inherit;
		// Support Firefox <= 34: `height` needed in addition to adding, otherwise oversized.
		height: @size-base;
		// stylelint-disable-next-line declaration-block-no-shorthand-property-overrides
		padding: ~'0\9';
		// Support IE 10: Don't try to use vertical padding on select!
		padding-left: @padding-horizontal-base;
		padding-right: @padding-end-dropdown;
		vertical-align: middle;

		/* Support IE 10: Move it in again and also add `padding`. Because we talk to morons. */
		@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
			background-position: right @padding-horizontal-base center;
			padding-left: @padding-horizontal-base;
			padding-right: @padding-end-dropdown;
		}

		// Support IE 10-11: Hide the default arrow.
		&::-ms-expand {
			display: none;
		}
		// stylelint-enable
	}

	option {
		background-color: transparent;
		font-family: inherit;
		font-size: inherit;
		height: 1.5em;
		padding: @padding-base;
	}

	&.oo-ui-widget-enabled {
		background-color: @background-color-framed;
		.oo-ui-transition(background-color @transition-base);

		&:hover {
			background-color: @background-color-framed--hover;
		}

		select {
			color: @color-base;
			.oo-ui-transition(border-color @transition-base, box-shadow @transition-base);

			&:hover {
				border-color: @border-color-base--hover;
				color: @color-base--hover;
			}

			&:active {
				border-color: @border-color-base--active;
				color: @color-base--active;
			}

			&:focus {
				border-color: @border-color-base--focus;
				box-shadow: @box-shadow-widget--focus;
				outline: 0;
			}
		}
	}

	&.oo-ui-widget-disabled {
		background-color: @background-color-base--disabled;

		select {
			border-color: @border-color-base--disabled;
			color: @color-base--disabled;
		}
	}
}

.theme-oo-ui-iconWidget() {
	display: inline-block;
	height: @size-icon;
	line-height: 2.5;
	position: static;
	top: auto;

	&.oo-ui-widget-disabled {
		opacity: @opacity-base--disabled;
	}
}

.theme-oo-ui-indicatorWidget() {
	display: inline-block;
	height: @size-indicator;
	line-height: 2.5;
	margin: @size-indicator / 2;
	position: static;
	top: auto;

	&.oo-ui-widget-disabled {
		opacity: @opacity-base--disabled;
	}
}

.theme-oo-ui-inputWidget() {
	.oo-ui-inline-spacing(@margin-end-widget);
}

.theme-oo-ui-labelWidget() {
	&.oo-ui-inline-help {
		color: @color-base--deemphasized;
		display: block;
		font-size: @font-size-small;
	}
}

.theme-oo-ui-menuOptionWidget() {
	.oo-ui-transition(background-color @transition-base, color @transition-base);

	&-checkIcon {
		display: none;
	}

	&.oo-ui-optionWidget {
		&-highlighted {
			background-color: @background-color-base--hover;
			color: @color-base--emphasized;
		}

		&-selected {
			background-color: @background-color-progressive;
			color: @color-progressive;
		}

		&-selected&-highlighted,
		&-pressed&-highlighted {
			background-color: @background-color-progressive--hover;
			color: @color-progressive;
		}
	}

	&.oo-ui-widget-enabled {
		&.oo-ui-optionWidget {
			color: @color-base;
		}
	}
}

.theme-oo-ui-menuSectionOptionWidget() {
	color: @wds-fandom-color-middle-gray;
	font-weight: bold;
	padding: @padding-vertical-base @padding-horizontal-base @padding-vertical-label;

	& ~ .oo-ui-menuOptionWidget {
		padding-left: 2 * @padding-horizontal-base;

		&.oo-ui-iconElement {
			padding-left: @padding-start-menu-icon-label + @padding-horizontal-base-iconized;

			.oo-ui-iconElement-icon {
				left: 2 * @padding-horizontal-base-iconized;
			}
		}
	}
}

.theme-oo-ui-menuSelectWidget() {
	background-color: @background-color-base;
	border: @border-menu;
	border-radius: 0 0 @border-radius-base @border-radius-base;
	box-shadow: @box-shadow-menu;
	margin-bottom: -1px;
	margin-top: -1px;
}

.theme-oo-ui-menuTagMultiselectWidget() {
}

.theme-oo-ui-messageWidget() {
	font-weight: bold;

	> .oo-ui-iconElement-icon {
		background-position: 0 0;
	}

	.oo-ui-labelElement-label {
		margin-left: @size-icon + @padding-start-messages;
	}

	&.oo-ui-messageWidget-block {
		border: @border-width-base @border-style-base;
		font-weight: normal;
		padding: @padding-vertical-message-block @padding-horizontal-message-block;

		> .oo-ui-iconElement-icon {
			background-position: 0 @padding-vertical-message-block;
		}

		&.oo-ui-flaggedElement-error {
			background-color: @background-color-error--framed;
			border-color: @border-color-error;
		}

		&.oo-ui-flaggedElement-warning {
			background-color: @background-color-warning--framed;
			border-color: @border-color-warning;
		}

		&.oo-ui-flaggedElement-success {
			background-color: @background-color-success--framed;
			border-color: @border-color-success;
		}

		&.oo-ui-flaggedElement-notice {
			background-color: @background-color-notice--framed;
			border-color: @border-color-notice;
		}
	}

	&.oo-ui-flaggedElement-error:not(.oo-ui-messageWidget-block) {
		color: @color-error;
	}

	&.oo-ui-flaggedElement-success:not(.oo-ui-messageWidget-block) {
		color: @color-success;
	}

	& + .oo-ui-messageWidget {
		margin-top: @margin-top-message;
	}
}

.theme-oo-ui-multioptionWidget() {
	&.oo-ui-widget-disabled {
		color: @color-base--disabled;
	}
}

.theme-oo-ui-multiselectWidget() {
}

.theme-oo-ui-numberInputWidget() {
	max-width: @max-width-input;

	&-buttoned {
		.oo-ui-buttonWidget {
			display: initial;
			width: @width-button-combo-widget;

			.oo-ui-buttonElement-button {
				min-width: @min-width-button-combo-widget;
				padding-left: 0;
				padding-right: 0;
			}
		}

		.oo-ui-numberInputWidget-field {
			display: grid;
			grid-template-columns: 37px 1fr 37px;
		}

		.oo-ui-inputWidget-input {
			border-radius: 0;
			display: initial;
			height: @size-base + 2px;
		}
	}

	&-minusButton > .oo-ui-buttonElement-button {
		border-bottom-right-radius: 0;
		border-right-width: 0;
		border-top-right-radius: 0;
	}

	&-plusButton > .oo-ui-buttonElement-button {
		border-bottom-left-radius: 0;
		border-left-width: 0;
		border-top-left-radius: 0;
	}

	&.oo-ui-widget-disabled {
		&.oo-ui-numberInputWidget-buttoned .oo-ui-iconElement-icon {
			opacity: 1;
		}
	}
}

.theme-oo-ui-optionWidget() {
	// Don't add `highlighted` or `selected` modifications here
	// as it inherits to various visually opposite widgets.

	&-selected .oo-ui-buttonElement-button > .oo-ui-iconElement-icon {
		opacity: @opacity-icon-base--selected;
	}

	&.oo-ui-widget-disabled {
		color: @color-base--disabled;
	}
}

.theme-oo-ui-outlineControlsWidget() {
	background-color: @background-color-base;

	&-items,
	&-movers {
		> .oo-ui-buttonWidget {
			height: @size-base;
			// There's a lot of weird specific margins with weird specific selectors
			margin: 0 !important; /* stylelint-disable-line declaration-no-important */
			width: @size-base;
		}
	}
}

.theme-oo-ui-outlineOptionWidget() {
	padding: @padding-menu-large;
	.oo-ui-transition(background-color @transition-base, color @transition-base);

	&.oo-ui-optionWidget-highlighted {
		background-color: @background-color-base--hover;
		color: @color-base--emphasized;
	}

	&.oo-ui-optionWidget-selected {
		background-color: @background-color-progressive;
		color: @color-progressive;
	}

	&.oo-ui-optionWidget-pressed {
		background-color: @background-color-progressive--hover;
		color: @color-progressive;
	}

	&.oo-ui-indicatorElement {
		.oo-ui-labelElement-label {
			padding-right: 1.5em;
		}

		.oo-ui-indicatorElement-indicator {
			opacity: 0.5;
		}
	}

	&-level-1 {
		padding-left: 2.571em;

		&.oo-ui-iconElement {
			padding-left: 4.429em;

			.oo-ui-iconElement-icon {
				left: 2.571em;
			}
		}
	}

	&-level-2 {
		padding-left: 5.142em;

		&.oo-ui-iconElement {
			padding-left: 6.857em;

			.oo-ui-iconElement-icon {
				left: 4.429em;
			}
		}
	}
}

.theme-oo-ui-outlineSelectWidget() {
	height: 100%;

	&:focus {
		box-shadow: inset 0 0 0 2px @color-progressive;
	}
}

.theme-oo-ui-popupWidget() {
	&-popup {
		background-color: @wds-color-white;
		border: 1px solid @wds-fandom-color-mid-light-gray;
		border-radius: @wds-rounded-corner-radius;
		box-shadow: 0 0 3px 0 rgba(@wds-color-black, 0.3);
	}

	// Support: Progressively enhance for browser's which render `filter`.
	@supports (filter: drop-shadow(0 0 0)) {
		filter: @filter-drop-shadow-menu;
		// Safari can have visual glitches with lingering shadows in some contexts
		// when using drop-shadow. This makes it be more zealous about cleaning
		// up. (See: T226872)
		.oo-ui-force-gpu-composite-layer();

		&-popup {
			box-shadow: none;
		}
	}

	&-anchored-top {
		margin-top: @size-anchor;

		.oo-ui-popupWidget-anchor {
			top: -@size-anchor;

			&::before {
				// The subtracting-triangles method results in a line that
				// is ~0.7px wide, so make it slightly darker to compensate.
				border-bottom-color: @wds-fandom-color-mid-light-gray;
				border-width: @size-anchor + 1px;
				bottom: -@size-anchor - 1px;
				left: -@size-anchor;
			}

			&::after {
				border-bottom-color: @wds-color-white;
				border-width: @size-anchor;
				bottom: -@size-anchor - 1px;
				left: -@size-anchor + 1px;
			}
		}
	}

	&-anchored-bottom {
		margin-bottom: @size-anchor;

		.oo-ui-popupWidget-anchor {
			bottom: -@size-anchor;

			&::before {
				border-top-color: @wds-fandom-color-mid-light-gray;
				border-width: @size-anchor + 1px;
				left: -@size-anchor;
				top: -@size-anchor - 1px;
			}

			&::after {
				border-top-color: @wds-color-white;
				border-width: @size-anchor;
				left: -@size-anchor + 1px;
				top: -@size-anchor - 1px;
			}
		}
	}

	&-anchored-start {
		margin-left: @size-anchor;

		.oo-ui-popupWidget-anchor {
			left: -@size-anchor;

			&::before {
				border-right-color: @wds-fandom-color-mid-light-gray;
				border-width: @size-anchor + 1px;
				right: -@size-anchor - 1px;
				top: -@size-anchor;
			}

			&::after {
				border-right-color: @wds-color-white;
				border-width: @size-anchor;
				right: -@size-anchor - 1px;
				top: -@size-anchor + 1px;
			}
		}
	}

	&-anchored-end {
		margin-right: @size-anchor;

		.oo-ui-popupWidget-anchor {
			right: -@size-anchor;

			&::before {
				border-left-color: @wds-fandom-color-mid-light-gray;
				border-width: @size-anchor + 1px;
				left: -@size-anchor - 1px;
				top: -@size-anchor;
			}

			&::after {
				border-left-color: @wds-color-white;
				border-width: @size-anchor;
				left: -@size-anchor - 1px;
				top: -@size-anchor + 1px;
			}
		}
	}

	&-transitioning .oo-ui-popupWidget-popup {
		.oo-ui-transition(width @transition-base, height @transition-base, left @transition-base);
	}

	&-head {
		> .oo-ui-labelElement-label {
			line-height: @line-height-base;
			margin: @margin-top-popup @padding-start-input-text-icon-label @padding-vertical-base @padding-horizontal-base;
		}

		> .oo-ui-buttonWidget {
			.oo-ui-icon-close {
				height: @wds-icon-tiny-size;
				margin-right: 0;
				min-width: @wds-icon-tiny-size;
				width: @wds-icon-tiny-size;
			}
		}
	}

	&-body {
		line-height: @line-height-message;

		&-padded {
			margin: @margin-top-popup @padding-horizontal-base @padding-vertical-base; // Use `margin` rather than `padding` to enable margin to collapse

			> :first-child {
				margin-top: 0;
			}
		}
	}

	&-footer {
		margin: @margin-top-popup @padding-horizontal-base @padding-vertical-base;
	}
}

.theme-oo-ui-popupButtonWidget() {
}

.theme-oo-ui-progressBarWidget() {
	background-color: @background-color-base;
	border: @border-base;
	border-radius: @border-radius-base;
	max-width: @max-width-base;
	overflow: hidden;

	&-bar {
		height: 1em;
		.oo-ui-transition(width @transition-base);
	}

	&-indeterminate {
		.oo-ui-progressBarWidget-bar {
			.oo-ui-animation(oo-ui-progressBarWidget-slide 2s infinite linear);

			width: 40%;
			.oo-ui-transform(translate(-25%));
		}
	}

	&.oo-ui-widget-enabled {
		.oo-ui-progressBarWidget-bar {
			background-color: @color-progressive;
		}
	}

	&.oo-ui-widget-disabled {
		.oo-ui-progressBarWidget-bar {
			background-color: @background-color-filled--disabled;
		}
	}

	.oo-ui-progressBarWidget-slide-frames() {
		from {
			.oo-ui-transform(translate(-100%));
		}

		to {
			.oo-ui-transform(translate(350%));
		}
	}

	@-webkit-keyframes oo-ui-progressBarWidget-slide {
		.oo-ui-progressBarWidget-slide-frames;
	}

	@-moz-keyframes oo-ui-progressBarWidget-slide {
		.oo-ui-progressBarWidget-slide-frames;
	}

	@keyframes oo-ui-progressBarWidget-slide {
		.oo-ui-progressBarWidget-slide-frames;
	}
}

.theme-oo-ui-radioInputWidget() {
	color: @wds-fandom-color-link;
	line-height: @wds-line-height-none;
	position: relative;
	vertical-align: middle;
	white-space: nowrap;
	z-index: 0;

	[type='radio'] {
		height: @size-input-binary;
		margin: 0;
		max-width: none;
		opacity: 0;
		position: relative;
		width: @size-input-binary;
		z-index: 1;

		& + span {
			background-color: @wds-color-light-gray;
			border: 2px solid @wds-color-light-gray;
			border-radius: 100%;
			box-sizing: border-box;
			color: inherit;
			height: @size-input-binary;
			left: 0;
			position: absolute;
			top: 0;
			width: @size-input-binary;

			&::before {
				background-color: @wds-color-white;
				border: (@size-input-binary - 2 * 2px)/2 solid @wds-color-white;
				border-radius: 100%;
				bottom: 0;
				content: ' ';
				left: 0;
				position: absolute;
				right: 0;
				top: 0;
			}
		}

		&:disabled {
			+ span {
				background-color: @wds-color-light-gray;
				border-color: @wds-color-light-gray;
				opacity: 0.5;
				pointer-events: none;
			}
		}
	}

	&.oo-ui-widget-enabled [type='radio'] {
		cursor: pointer;

		+ span {
			cursor: pointer;

			.oo-ui-transition(
				background-color @transition-base,
				border-color @transition-base,
				border-width @transition-base
			);

			&::before {
				.oo-ui-transition(border-width 0.1s);
			}
		}

		&:hover + span {
			border-color: currentColor;
		}

		&:checked {
			& + span,
			&:hover + span,
			&:focus + span,
			&:focus:hover + span {
				background-color: currentColor;
				border-color: currentColor;

				&::before {
					background-color: transparent;
					border-width: 3px;
				}
			}
		}

		&:active + span,
		&:checked:active + span {
			background-color: currentColor;
			border-color: currentColor;

			&::before {
				background-color: transparent;
				border-width: 0;
				transition: none;
			}
		}
	}
}

.theme-oo-ui-radioOptionWidget() {
	padding: @padding-vertical-label 0;

	&:first-child {
		margin-top: -@padding-vertical-label;
	}

	&.oo-ui-labelElement > .oo-ui-labelElement-label {
		padding-left: @padding-start-fieldlayout-label;
	}

	.oo-ui-radioInputWidget {
		margin-right: 0;
	}
}

.theme-oo-ui-radioSelectWidget() {
}

.theme-oo-ui-radioSelectInputWidget() {
	.oo-ui-fieldLayout {
		// Override `.oo-ui-fieldLayout.oo-ui-labelElement`.
		margin-top: 0;
		// Equal to RadioOptionWidget and to prevent collapsing `margin`s.
		padding: @padding-vertical-label 0;

		&:first-child {
			// `@padding-vertical-label` used as negative `margin-top` here.
			margin-top: -@padding-vertical-label;
		}
	}
}

.theme-oo-ui-searchWidget() {
	&-query {
		border-bottom: @border-toolbar;
		box-shadow: @box-shadow-toolbar-top;
		height: @height-search;
		padding: 0 @padding-panel-form; // Need to use `padding` over `margin` for horizontally continuos `border`/`box-shadow` below

		.oo-ui-textInputWidget {
			margin: @margin-search 0;
		}
	}

	&-results {
		line-height: 0;
		padding: @padding-panel-form; // Use smaller `@padding-panel-form` over `@padding-panel-dialog` for image results
		top: @height-search;
	}
}

.theme-oo-ui-selectWidget() {
}

.theme-oo-ui-selectFileInputWidget() {
	max-width: @max-width-input;
	width: 100%;

	&-info > .oo-ui-inputWidget-input {
		height: @size-base;
	}
}

.theme-oo-ui-selectFileWidget() {
	&-dropTarget {
		background-color: @background-color-base;
		border: @border-base;
		border-radius: @border-radius-base;
		overflow: hidden;
		vertical-align: middle;

		&.oo-ui-selectFileInputWidget-empty {
			border-style: dashed;
		}

		// Inline style `background-image` on thumbnail will take place over PendingElement.
		.oo-ui-pendingElement-pending {
			background-size: @size-icon @size-icon;
		}
	}

	&-buttonOnly {
		max-width: none;
		// Reset widths that conflict with buttonWidget styles
		width: auto;
	}

	&.oo-ui-widget-enabled {
		&.oo-ui-selectFileWidget-dropTarget {
			background-color: @background-color-base;
			.oo-ui-transition(
				background-color @transition-ease-medium,
				color @transition-ease-medium,
				border-color @transition-ease-medium
			);

			&:hover {
				border-color: @border-color-input--hover;
			}
		}

		.oo-ui-selectFileInputWidget-info > .oo-ui-inputWidget-input {
			.oo-ui-transition(background-color @transition-ease-medium, color @transition-ease-medium);
		}

		&.oo-ui-selectFileWidget-canDrop {
			&.oo-ui-selectFileWidget-dropTarget,
			.oo-ui-selectFileInputWidget-info > .oo-ui-inputWidget-input {
				background-color: @background-color-progressive;
				color: @color-progressive--active-hover;
			}
		}
	}

	&.oo-ui-widget-disabled,
	&.oo-ui-selectFileInputWidget-empty.oo-ui-widget-disabled {
		&.oo-ui-selectFileWidget-dropTarget {
			background-color: @background-color-base--disabled;
			border-color: @border-color-base--disabled;
		}
	}
}

.theme-oo-ui-tabOptionWidget() {
	@option-selected-border-width: 2px;

	align-items: center;
	border-color: transparent;
	border-style: @border-style-base;
	display: inline-flex;
	font-size: @wds-font-size-xs;
	font-weight: @wds-font-weight-bold;
	height: 40px;
	line-height: @line-height-reset;
	padding: 0 @padding-horizontal-taboption;
	text-transform: uppercase;
	.oo-ui-transition(background-color @transition-base, color @transition-base, border-color @transition-base);

	&.oo-ui-optionWidget-selected {
		cursor: default;
	}

	.oo-ui-labelElement-label {
		padding: 0 11px;
	}

	.oo-ui-tabSelectWidget-mobile &:last-child {
		margin-right: @margin-taboption * 3; // Equals to mobile overflow gradient below.
	}

	.oo-ui-tabSelectWidget-framed & {
		border-top-left-radius: @border-radius-base;
		border-top-right-radius: @border-radius-base;
		border-width: @border-width-base @border-width-base 0 @border-width-base;

		.oo-ui-labelElement-label {
			border-bottom: (2 * @border-width-base) @border-style-base transparent;
			padding: @padding-vertical-base @padding-horizontal-taboption-label
				(@padding-vertical-base - 2 * @border-width-base); // Provide additional `padding` on label itself for special tab focus
			.oo-ui-transition(border-color @transition-base);
		}

		&.oo-ui-optionWidget-selected {
			background-color: @background-color-base;
			color: @color-base--active;

			.oo-ui-labelElement-label {
				border-bottom-color: @background-color-base; // TabOption `background-color` acting as default `border-color`
			}
		}

		&.oo-ui-widget-enabled {
			&:hover {
				background-color: rgba(255, 255, 255, 0.3);
				color: @color-base;
			}

			&:active {
				background-color: rgba(255, 255, 255, 0.8);
				color: @color-base--active;
			}

			&.oo-ui-optionWidget-selected:hover {
				background-color: @background-color-base;
			}
		}
	}

	.oo-ui-tabSelectWidget-framed.oo-ui-widget-enabled:focus &.oo-ui-optionWidget-selected .oo-ui-labelElement-label {
		border-bottom-color: @border-color-base--focus;
	}

	.oo-ui-tabSelectWidget-frameless & {
		border-width: 1px 0;
		box-shadow: inset 0 0 0 0 @wds-fandom-color-link;
		.oo-ui-transition(color @transition-base, box-shadow @transition-base);

		&.oo-ui-optionWidget-selected,
		&.oo-ui-widget-enabled:hover,
		&.oo-ui-widget-enabled:active {
			box-shadow: inset 0 -@option-selected-border-width 0 0 @wds-fandom-color-link;
			color: @wds-fandom-color-link;
		}
	}

	.oo-ui-tabSelectWidget-frameless.oo-ui-widget-enabled:focus &.oo-ui-optionWidget-selected {
		border-radius: @border-radius-base;
		box-shadow: inset 0 0 0 @option-selected-border-width @wds-fandom-color-link;
	}
}

.theme-oo-ui-tabSelectWidget() {
	&-framed {
		background-color: @background-color-tabs;
	}

	&-frameless {
		box-shadow: inset 0 -@border-width-base 0 0 @border-color-base;
	}

	// Add background gradient to emphasize tab overflow.
	&-mobile {
		&::after {
			bottom: 0;
			content: '';
			height: @size-base;
			pointer-events: none;
			position: absolute;
			right: 0;
			width: @margin-taboption * 3;
		}

		&.oo-ui-tabSelectWidget-framed::after {
			.oo-ui-horizontal-gradient(fade(#eaecf0, 0), #eaecf0);
			// Override fallback color from mixin
			background-color: transparent;
		}

		&.oo-ui-tabSelectWidget-frameless::after {
			.oo-ui-horizontal-gradient(fade(#fff, 0), #fff);
			// Override fallback color from mixin
			background-color: transparent;
			bottom: @size-modifier-border * 2;
		}
	}

	// Keyboard focus is handled in TabOptionWidget above
	&.oo-ui-widget-enabled:focus {
		outline: 0;
	}
}

.theme-oo-ui-tagItemWidget() {
	border: @border-base;
	border-radius: @height-tagitem;
	box-sizing: border-box;
	height: @height-tagitem;
	line-height: @height-tagitem - 2 * @size-modifier-border;
	margin: 0 @margin-tagitem @margin-tagitem 0;
	max-width: 100%;
	padding: 0 @padding-horizontal-tagitem;
	vertical-align: middle;
	width: auto;

	&.oo-ui-labelElement .oo-ui-labelElement-label {
		font-size: @font-size-small;
		line-height: @line-height-tagitem-label;
	}

	&.oo-ui-widget-enabled {
		color: @color-base;
		.oo-ui-transition(
			background-color @transition-base,
			color @transition-base,
			border-color @transition-base,
			box-shadow @transition-base
		);

		&:hover {
			background-color: @background-color-framed--hover;
			border-color: @border-color-base--hover;
			color: @color-base--hover;
		}

		&:focus {
			border-color: @border-color-base--focus;
			box-shadow: @box-shadow-widget--focus;
			outline: 0;
		}

		&:not(.oo-ui-tagItemWidget-fixed) {
			background-color: @background-color-framed;
			padding-right: @padding-end-tagitem-close;
		}

		&.oo-ui-flaggedElement-invalid {
			border-color: @border-color-error;

			&:hover {
				border-color: @border-color-error;
			}

			&:focus {
				border-color: @border-color-error;
				box-shadow: @box-shadow-error--focus;
			}
		}

		// Clear button
		> .oo-ui-buttonElement {
			display: block;
			position: absolute;
			right: 0;
			top: 0;
		}

		& .oo-ui-buttonElement-button {
			// frameless reset
			border: 0;
			border-radius: @height-tagitem;
			display: block;
			padding-left: @size-button-tagitem-close;
			padding-top: @size-button-tagitem-close;
			.oo-ui-transition(background-color @transition-base);

			&:hover {
				background-color: @background-color-framed--hover;
			}

			&:active {
				background-color: @background-color-framed--active;
			}

			.oo-ui-icon-close {
				left: @margin-tagitem - @border-width-base;
				min-width: @min-size-icon-small;
				width: @size-icon-small;
			}

			.oo-ui-labelElement-label,
			.oo-ui-indicatorElement-indicator {
				display: none;
			}
		}
	}

	&.oo-ui-widget-disabled {
		background-color: @background-color-base--disabled;
		border-color: @border-color-base--disabled;
		color: @color-base--disabled;
		text-shadow: @text-shadow-base--disabled;

		&:focus {
			outline: 0;
		}

		// Clear button
		> .oo-ui-buttonElement {
			display: none;
		}
	}
}

.theme-oo-ui-tagMultiselectWidget() {
	max-width: @max-width-input;
	vertical-align: top;
	width: 100%;

	&-handle {
		border: @border-base;
		border-radius: @border-radius-base;
		box-sizing: border-box;
		line-height: @line-height-reset;
		min-height: @min-height-widget-base;
		padding: 0 @padding-horizontal-input-text;
		.oo-ui-inline-spacing(@margin-end-widget);

		> .oo-ui-tagMultiselectWidget-content {
			> input {
				background-color: transparent;
				border: 0;
				box-sizing: border-box;
				color: @color-base--emphasized;
				font-family: inherit;
				font-size: inherit;
				height: @size-base - 2 * (@size-modifier-border);
				line-height: @line-height-base;
				padding: @padding-vertical-base 0 @padding-vertical-base @start-tagmultiselect-input;
				vertical-align: top;

				.mw-placeholder();

				&:focus {
					outline: 0; // Support: Chrome
				}
			}

			.oo-ui-tagMultiselectWidget-group:empty + input {
				// Support: IE 9+ & modern browsers only
				margin-left: 0;
			}
		}

		.oo-ui-tagMultiselectWidget-group {
			display: inline-block;
			margin-left: @size-tag-group-modifier;
			margin-top: @margin-tagitem;
			max-width: 100%;
		}
	}

	&.oo-ui-iconElement &-handle {
		padding-left: @size-icon + 8px;

		> .oo-ui-iconElement-icon {
			left: 0;
			margin: 0 4px;
		}
	}

	&.oo-ui-indicatorElement &-handle {
		padding-right: @size-indicator + 22px;

		> .oo-ui-indicatorElement-indicator {
			margin: 0 11px;
			right: 0;
		}
	}

	&.oo-ui-widget-enabled {
		// `background-color` needs to be on handle parent in oorder to enable pending animation.
		background-color: @background-color-base;

		.oo-ui-tagMultiselectWidget-handle {
			.oo-ui-transition(border-color @transition-ease-medium, box-shadow @transition-ease-medium);
		}

		&.oo-ui-tagMultiselectWidget-inlined {
			&:hover .oo-ui-tagMultiselectWidget-handle {
				border-color: @border-color-input--hover;
			}

			&.oo-ui-tagMultiselectWidget-focus .oo-ui-tagMultiselectWidget-handle {
				border-color: @border-color-base--focus;
				box-shadow: @box-shadow-widget--focus;
				outline: 0;
			}

			&.oo-ui-flaggedElement-invalid {
				.oo-ui-tagMultiselectWidget-handle,
				&:hover .oo-ui-tagMultiselectWidget-handle {
					border-color: @border-color-error;
				}
			}
		}

		&.oo-ui-tagMultiselectWidget-outlined {
			background-color: @background-color-base--read-only;

			.oo-ui-tagMultiselectWidget-handle {
				border-bottom: 0;
				border-bottom-left-radius: 0;
				border-bottom-right-radius: 0;
			}

			.oo-ui-tagItemWidget.oo-ui-widget-enabled {
				background-color: @background-color-base;
			}

			.oo-ui-inputWidget-input {
				border-top-left-radius: 0;
				border-top-right-radius: 0;
			}

			&.oo-ui-flaggedElement-invalid .oo-ui-inputWidget-input {
				border-color: @border-color-error;
			}
		}

		&.oo-ui-flaggedElement-invalid .oo-ui-inputWidget-input {
			color: @color-error;
		}
	}

	&.oo-ui-widget-disabled &-handle {
		background-color: @background-color-base--disabled;
		border-color: @border-color-base--disabled;
		color: @color-base--disabled;
		text-shadow: @text-shadow-base--disabled;

		> .oo-ui-iconElement-icon {
			opacity: @opacity-base--disabled;
		}

		> .oo-ui-indicatorElement-indicator {
			opacity: @opacity-indicator--disabled;
		}
	}
}

.theme-oo-ui-textInputWidget() {
	max-width: @max-width-input;
	width: 100%;

	// `.oo-ui-inputWidget-input` serves both, `input` and `textarea`
	.oo-ui-inputWidget-input {
		background-color: @wds-color-white;
		border: 1px solid @wds-fandom-color-mid-light-gray;
		border-radius: @wds-rounded-corner-radius;
		color: inherit;
		font-family: inherit;
		font-size: @wds-font-size-s;
		line-height: @wds-line-height-normal;
		padding: @wds-button-vertical-padding @input-horizontal-padding;
	}

	// TextInputWidget (single line).
	input {
		height: @size-base;
	}

	.oo-ui-pendingElement-pending {
		background-color: @background-color-pending-stripe;
	}

	> .oo-ui-iconElement-icon,
	> .oo-ui-indicatorElement-indicator {
		height: auto;
		position: absolute;
	}

	&.oo-ui-iconElement {
		.oo-ui-inputWidget-input {
			padding-left: @input-horizontal-padding + @wds-icon-small-size + @wds-button-horizontal-gap;
		}

		> .oo-ui-iconElement-icon {
			left: @input-horizontal-padding;
			top: 7px;
		}

		textarea + .oo-ui-iconElement-icon {
			max-height: @size-base; // Use `@size-base` as `max-height` for multiline TextInputWidgets
			top: 10px;
		}
	}

	> .oo-ui-labelElement-label {
		color: @wds-fandom-color-middle-gray;
		line-height: @size-base;
		padding: 0 @padding-horizontal-base 0 @padding-horizontal-input-text;
	}

	&.oo-ui-indicatorElement {
		.oo-ui-inputWidget-input {
			padding-right: @min-size-indicator + 2 * @padding-horizontal-input-text;
		}

		&.oo-ui-textInputWidget-labelPosition-after > .oo-ui-labelElement-label {
			padding-right: 0;
		}

		> .oo-ui-indicatorElement-indicator {
			margin-right: @input-horizontal-padding;
			top: 10px;
		}
	}

	&-labelPosition-after {
		&.oo-ui-indicatorElement > .oo-ui-labelElement-label {
			margin-right: @size-base;
		}
	}

	&-labelPosition-before {
		&.oo-ui-iconElement > .oo-ui-labelElement-label {
			padding-left: @padding-start-input-text-icon-label;
		}
	}

	&.oo-ui-widget-enabled {
		.oo-ui-inputWidget-input {
			box-shadow: @box-shadow-widget; // necessary for smooth transition
			.oo-ui-transition(border-color @transition-ease-medium, box-shadow @transition-ease-medium);

			.mw-placeholder();

			&:hover,
			&:focus {
				border-color: @wds-fandom-color-link;
			}

			&:focus {
				box-shadow: inset 0 0 0 1px @wds-fandom-color-link;
			}

			&[readonly] {
				background-color: @wds-fandom-color-light-gray;
			}
		}

		&.oo-ui-flaggedElement-invalid {
			.oo-ui-inputWidget-input {
				border-color: @wds-color-alert;

				&:hover,
				&:focus {
					border-color: @wds-color-alert;
				}

				&:focus {
					box-shadow: inset 0 0 0 1px @wds-color-alert;
				}
			}
		}
	}

	&.oo-ui-widget-disabled {
		.oo-ui-inputWidget-input {
			background-color: @wds-fandom-color-light-gray;
			opacity: 0.5;
		}
	}
}

.theme-oo-ui-toggleWidget() {
}

.theme-oo-ui-toggleButtonWidget() {
	.oo-ui-inline-spacing(@margin-end-widget);
}

.theme-oo-ui-toggleSwitchWidget() {
	@travelDistance: 1.5em;

	background-color: @wds-fandom-color-middle-gray;
	border-radius: 8px;
	height: 14px;
	overflow: visible;
	width: 34px;
	.oo-ui-transition(background-color @transition-base);

	&-grip {
		background-color: @wds-fandom-color-light-gray;
		border-radius: 50%;
		box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.14), 0 2px 2px 0 rgba(0, 0, 0, 0.098), 0 1px 5px 0 rgba(0, 0, 0, 0.084);
		content: '';
		display: block;
		height: 20px;
		left: -1px;
		outline: 0;
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		width: 20px;
		.oo-ui-transition(background-color @transition-base, transform @transition-base);
	}

	&-glow {
		display: none;
	}

	&:focus {
		outline: none;
	}

	&.oo-ui-toggleWidget-on {
		background-color: lighten(desaturate(@wds-fandom-color-button-background, 20%), 10%);

		.oo-ui-toggleSwitchWidget-grip {
			background-color: @wds-fandom-color-button-background;
			transform: translate(80%, -50%);
		}
	}

	&.oo-ui-widget-disabled {
		opacity: 0.5;
		pointer-events: none;

		.oo-ui-toggleWidget-off .oo-ui-toggleSwitchWidget-grip {
			background-color: @wds-color-white;
			transform: translate(80%, -50%);
		}
	}
}

.mw-placeholder() {
	// Normalize placeholder styling, see T139034
	.oo-ui-placeholder({color: @color-placeholder; opacity: 1;});
}
